<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://hevia.github.io/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://hevia.github.io/blog/" rel="alternate" type="text/html" /><updated>2023-01-25T03:41:08-06:00</updated><id>https://hevia.github.io/blog/feed.xml</id><title type="html">A Very Normal Programming Blog</title><subtitle>Personal blog for Anthony Hevia</subtitle><entry><title type="html">Prompting climate misinformation from GPT-3 🤯</title><link href="https://hevia.github.io/blog/misinformation/climate/2022/06/22/prompting-misinformation.html" rel="alternate" type="text/html" title="Prompting climate misinformation from GPT-3 🤯" /><published>2022-06-22T00:00:00-05:00</published><updated>2022-06-22T00:00:00-05:00</updated><id>https://hevia.github.io/blog/misinformation/climate/2022/06/22/prompting-misinformation</id><author><name></name></author><category term="misinformation" /><category term="climate" /><summary type="html">Introduction Ever since OpenAI widen access to GPT-3 API I’ve had a lot of fun toying with it. Most of time I’ve spent for goofs with friends, but after reading about some of the safety measures OpenAI had taken. I wondering if less common climate myths were overlooked or not in that safety calculation.</summary></entry><entry><title type="html">Skillful precipitation nowcasting using deep generative models of radar 🌨️ [Paper Summary]</title><link href="https://hevia.github.io/blog/ml/climate/2021/10/17/deepmind-nowcasting.html" rel="alternate" type="text/html" title="Skillful precipitation nowcasting using deep generative models of radar 🌨️ [Paper Summary]" /><published>2021-10-17T00:00:00-05:00</published><updated>2021-10-17T00:00:00-05:00</updated><id>https://hevia.github.io/blog/ml/climate/2021/10/17/deepmind-nowcasting</id><author><name></name></author><category term="ml" /><category term="climate" /><summary type="html">Skilful precipitation nowcasting using deep generative models of radar</summary></entry><entry><title type="html">Deploying Prodigy to Azure using Docker 🐋</title><link href="https://hevia.github.io/blog/python/nlp/prodigy/azure/postgresql/docker/2021/05/23/deploying-prodigy-to-azure.html" rel="alternate" type="text/html" title="Deploying Prodigy to Azure using Docker 🐋" /><published>2021-05-23T00:00:00-05:00</published><updated>2021-05-23T00:00:00-05:00</updated><id>https://hevia.github.io/blog/python/nlp/prodigy/azure/postgresql/docker/2021/05/23/deploying-prodigy-to-azure</id><author><name></name></author><category term="python" /><category term="nlp" /><category term="prodigy" /><category term="azure" /><category term="postgresql" /><category term="docker" /><summary type="html">Introduction 👋🏽 This is a quick guide on how to deploy Explosion’s data annotation tool Prodigy. This guide is meant as a reference &amp;amp; assumes you know how to use Docker, Azure, and you know how to deploy/provision a database.</summary></entry><entry><title type="html">Concurrency &amp;amp; Parallelism with Python in 5 minutes 🐍🏃🏽‍♂️</title><link href="https://hevia.github.io/blog/python/concurrency/parallelism/multithreading/2021/05/15/Intro-to-concurrency-and-parallelism-with-Python.html" rel="alternate" type="text/html" title="Concurrency &amp;amp; Parallelism with Python in 5 minutes 🐍🏃🏽‍♂️" /><published>2021-05-15T00:00:00-05:00</published><updated>2021-05-15T00:00:00-05:00</updated><id>https://hevia.github.io/blog/python/concurrency/parallelism/multithreading/2021/05/15/Intro-to-concurrency-and-parallelism-with-Python</id><author><name></name></author><category term="python" /><category term="concurrency" /><category term="parallelism" /><category term="multithreading" /><summary type="html">Introduction 🏃🏽‍♀️ One of the best next steps you can take on your Python journey is diving into concurrency &amp;amp; parallelsim. Many developers will often learn enough to get by, but you can spend your entire career in this space! There are a lot of exciting things to learn, but newcomers can often feel intimadated by the steep curve. In this series of short posts I am hoping we can distill these topics so you can start writing more performant Python 🚀🐍</summary></entry></feed>